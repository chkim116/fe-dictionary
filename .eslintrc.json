{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "next/core-web-vitals",
    "plugin:@next/next/recommended",
    "plugin:storybook/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:react-hooks/recommended",
    "prettier"
  ],
  "plugins": ["@typescript-eslint", "react-hooks", "import", "jsx-a11y"],
  "rules": {
    "quotes": ["error", "single"],
    "semi": ["error", "always"],
    "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 1 }],
    "no-use-before-define": ["error"],
    "react/react-in-jsx-scope": "off",
    "react/self-closing-comp": [
      "error",
      {
        "component": true,
        "html": true
      }
    ],
    "explicit-module-boundary-types": "off",
    "react/prop-types": "off",
    "no-param-reassign": ["error", { "props": false }],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin", // Built-in types are first
          "external",
          "internal",
          ["sibling", "parent"], // Then sibling and parent types. They can be mingled together
          "index", // Then the index file
          "object"
        ],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "next",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "@nextui-org/**",
            "group": "builtin",
            "position": "before"
          },
          {
            "pattern": "@core/**",
            "group": "internal"
          },
          {
            "pattern": "@shared/**",
            "group": "internal"
          },
          {
            "pattern": "@features/**",
            "group": "internal"
          },
          {
            "pattern": "@fixtures/**",
            "group": "internal"
          }
        ],
        "pathGroupsExcludedImportTypes": ["builtin"]
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ]
  }
}
